{"version":3,"sources":["webpack:///./src/components/recipe-teaser.js","webpack:///./src/pages/recipe-listing.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["RecipeTeaser","_ref","imgSrc","recipeTitle","recipeDate","recipeSummary","recipeSlug","react_default","a","createElement","src","withPrefix","alt","gatsby_browser_entry","to","__webpack_require__","d","__webpack_exports__","query","RecipeListing","data","layout","seo","title","keywords","allNodeRecipe","edges","map","recipe","recipe_teaser","key","node","id","relationships","field_image","filename","created","field_summary","value","fields","slug","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","siteSlogan","style","background","marginBottom","margin","maxWidth","padding","color","textDecoration","defaultProps","Layout","Fragment","header","site","siteMetadata","slogan","paddingTop","Date","getFullYear","href","_3363247751","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-pages-recipe-listing-js-67637294dce07ee408a4.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { withPrefix } from 'gatsby'\n\n\nconst RecipeTeaser = ({imgSrc, recipeTitle, recipeDate, recipeSummary, recipeSlug}) => (\n  <article>\n    <img src={withPrefix('drupal-files/' + imgSrc)} alt=\"\" />\n    <Link to={recipeSlug}>\n      <h2>{recipeTitle}</h2>\n    </Link>\n    <p>{recipeDate}</p>\n    <p>{recipeSummary}</p>\n  </article>\n)\n\nexport default RecipeTeaser\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport RecipeTeaser from \"../components/recipe-teaser\"\n\nconst RecipeListing = ({ data }) => (\n  <Layout>\n    <SEO title=\"Recipe Listing\" keywords={[`gatsby`, `application`, `react`]} />\n    <h1>Recipe Listing</h1>\n    { data.allNodeRecipe.edges.map((recipe) => (\n      <RecipeTeaser\n        key={recipe.node.id}\n        imgSrc={recipe.node.relationships.field_image.filename}\n        recipeDate={recipe.node.created}\n        recipeTitle={recipe.node.title}\n        recipeSummary={recipe.node.field_summary.value}\n        recipeSlug={recipe.node.fields.slug}\n      />\n    ) )}\n  </Layout>\n)\n\nexport const query = graphql`\n  query RecipeQuery {\n  \tallNodeRecipe {\n      edges {\n        node {\n          id\n          field_summary {\n            value\n          }\n          title\n          fields {\n            slug\n          }\n          created(formatString: \"MMMM Do, YYYY\")\n          relationships {\n            field_image {\n              id\n              filename\n              uri {\n                value\n                url\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default RecipeListing\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle, siteSlogan }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}: {siteSlogan}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            slogan\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header\n          siteTitle={data.site.siteMetadata.title}\n          siteSlogan={data.site.siteMetadata.slogan}\n        />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}